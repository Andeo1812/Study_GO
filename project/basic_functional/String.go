package basic_functional

import (
	"fmt"
	"unicode/utf8"
)

func String() {
	fmt.Println("String")

	//  –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é
	var str string

	//  –°–æ —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–∞–º–∏
	var hello string = "Hello\n\t"

	//  –ë–µ–∑ —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–æ–≤, \t —Ç–æ–∂–µ –ø–µ—á–∞—Ç–∞—é—Ç—Å—è
	var world string = `World\n\t
	ipasfipafs
	pioajsfpjafs
	poajsfojasf
	japosfj
	`

	fmt.Println("str", str)
	fmt.Println("hello", hello)
	fmt.Println("world", world)

	var helloWorld = "Hello, world!"
	symbol := "Ë±°ÂæÅ"

	fmt.Println("helloWorld", helloWorld)
	fmt.Println("symbol", symbol)

	//  –û–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –¥–ª—è –±–∞–π—Ç (uint8)
	var rawBinary byte = '\x27'

	//  rune (uint32) –¥–ª—è UTF-8 —Å–∏–º–≤–æ–ª–æ–≤
	var someChinese rune = 'ÂæÅ'

	fmt.Println(rawBinary, someChinese)

	helloWorld = "Hello World üôÇ"
	//  –ö–æ–Ω–∫–∞—Ç–µ–∑–∞—Ü–∏—è —Å—Ç—Ä–æ–∫
	andGoodMorning := helloWorld + " and good morning!"

	fmt.Println(helloWorld, andGoodMorning)

	//  –°—Ç—Ä–æ–∫–∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã
	//  cannot assign to helloWorld[0]
	//  helloWorld[0] = 72

	//  –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω—ã —Å—Ç—Ä–æ–∫–∏
	byteLen := len(helloWorld)
	symbols := utf8.RuneCountInString(helloWorld)

	fmt.Println(byteLen, symbols)

	//  –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏, –≤ –±–∞–π—Ç–∞—Ö, –Ω–µ —Å–∏–º–≤–æ–ª–∞—Ö
	hello = helloWorld[:12]
	H := helloWorld[0]

	fmt.Println(hello, H)

	//  –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Å–ª–∞–π—Å –±–∞–π—Ç –∏ –æ–±—Ä–∞—Ç–Ω–æ
	byteString := []byte(helloWorld)
	helloWorld = string(byteString)

	fmt.Println(byteString, helloWorld)
}
